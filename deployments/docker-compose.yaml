version: '3.8'

services:
  frontend:
    build: ../frontend
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    env_file:
      - .env
    ports:
      - "8080:3000"
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.backend
    container_name: backend
#    command: ["alembic", "upgrade", "head"]
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - scanner
      - nn
  postgres:
    image: "postgres:latest"
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - ./redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
  bot:
    build:
      context: ../backend
      dockerfile: Dockerfile.bot
    container_name: bot
    restart: always
    depends_on:
      - postgres
      - redis
  scanner:
    build:
     context: ../scanner
     dockerfile: Dockerfile
    container_name: scanner
    restart: always
    env_file:
      - .env
  nn:
   image: "otchayanniy/cyberassistant:version0.1"
   container_name: nn
   restart: always 
volumes:
  postgres_data:
  redis_data:
    driver: local
